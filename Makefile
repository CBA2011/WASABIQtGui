#############################################################################
# Makefile for building: WASABIGuiQt
# Generated by qmake (2.01a) (Qt 4.7.2) on: Do. Sep 29 14:25:27 2011
# Project:  WASABIGuiQt.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -spec /usr/share/qt4/mkspecs/linux-g++ QMLJSDEBUGGER_PATH=/usr/share/qtcreator/qml/qmljsdebugger -o Makefile WASABIGuiQt.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtNetwork -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtOpenGL -I/usr/include/qt4 -I../WASABIEngine -I/usr/X11R6/include -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -L/usr/X11R6/lib -L/home/cba/WASABIQtGui/../WASABIEngine/ -lWASABIEngine -lQtOpenGL -lQtGui -lQtNetwork -lQtCore -lGLU -lGL -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		wasabiqtwindow.cpp \
		padwindow.cpp \
		glPADWidget.cpp moc_padwindow.cpp \
		moc_glPADWidget.cpp \
		moc_wasabiqtwindow.cpp
OBJECTS       = main.o \
		wasabiqtwindow.o \
		padwindow.o \
		glPADWidget.o \
		moc_padwindow.o \
		moc_glPADWidget.o \
		moc_wasabiqtwindow.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		WASABIGuiQt.pro
QMAKE_TARGET  = WASABIGuiQt
DESTDIR       = 
TARGET        = WASABIGuiQt

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_wasabiqtwindow.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: WASABIGuiQt.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtOpenGL.prl \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtNetwork.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ QMLJSDEBUGGER_PATH=/usr/share/qtcreator/qml/qmljsdebugger -o Makefile WASABIGuiQt.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/opengl.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtOpenGL.prl:
/usr/lib/libQtGui.prl:
/usr/lib/libQtNetwork.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ QMLJSDEBUGGER_PATH=/usr/share/qtcreator/qml/qmljsdebugger -o Makefile WASABIGuiQt.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/WASABIGuiQt1.0.0 || $(MKDIR) .tmp/WASABIGuiQt1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/WASABIGuiQt1.0.0/ && $(COPY_FILE) --parents padwindow.h glPADWidget.h wasabiqtwindow.h .tmp/WASABIGuiQt1.0.0/ && $(COPY_FILE) --parents main.cpp wasabiqtwindow.cpp padwindow.cpp glPADWidget.cpp .tmp/WASABIGuiQt1.0.0/ && $(COPY_FILE) --parents wasabiqtwindow.ui .tmp/WASABIGuiQt1.0.0/ && (cd `dirname .tmp/WASABIGuiQt1.0.0` && $(TAR) WASABIGuiQt1.0.0.tar WASABIGuiQt1.0.0 && $(COMPRESS) WASABIGuiQt1.0.0.tar) && $(MOVE) `dirname .tmp/WASABIGuiQt1.0.0`/WASABIGuiQt1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/WASABIGuiQt1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_padwindow.cpp moc_glPADWidget.cpp moc_wasabiqtwindow.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_padwindow.cpp moc_glPADWidget.cpp moc_wasabiqtwindow.cpp
moc_padwindow.cpp: padwindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) padwindow.h -o moc_padwindow.cpp

moc_glPADWidget.cpp: ../WASABIEngine/WASABIEngine.h \
		../WASABIEngine/cogaEmotionalAttendee.h \
		../WASABIEngine/EmotionDynamics.h \
		../WASABIEngine/EmotionContainer.h \
		../WASABIEngine/AffectiveState.h \
		../WASABIEngine/WASABIEngine_global.h \
		../WASABIEngine/EmotionConverter.h \
		../WASABIEngine/cogaAttendee.h \
		glPADWidget.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) glPADWidget.h -o moc_glPADWidget.cpp

moc_wasabiqtwindow.cpp: ../WASABIEngine/WASABIEngine.h \
		../WASABIEngine/cogaEmotionalAttendee.h \
		../WASABIEngine/EmotionDynamics.h \
		../WASABIEngine/EmotionContainer.h \
		../WASABIEngine/AffectiveState.h \
		../WASABIEngine/WASABIEngine_global.h \
		../WASABIEngine/EmotionConverter.h \
		../WASABIEngine/cogaAttendee.h \
		wasabiqtwindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) wasabiqtwindow.h -o moc_wasabiqtwindow.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_wasabiqtwindow.h
compiler_uic_clean:
	-$(DEL_FILE) ui_wasabiqtwindow.h
ui_wasabiqtwindow.h: wasabiqtwindow.ui
	/usr/bin/uic-qt4 wasabiqtwindow.ui -o ui_wasabiqtwindow.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

main.o: main.cpp wasabiqtwindow.h \
		../WASABIEngine/WASABIEngine.h \
		../WASABIEngine/cogaEmotionalAttendee.h \
		../WASABIEngine/EmotionDynamics.h \
		../WASABIEngine/EmotionContainer.h \
		../WASABIEngine/AffectiveState.h \
		../WASABIEngine/WASABIEngine_global.h \
		../WASABIEngine/EmotionConverter.h \
		../WASABIEngine/cogaAttendee.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

wasabiqtwindow.o: wasabiqtwindow.cpp wasabiqtwindow.h \
		../WASABIEngine/WASABIEngine.h \
		../WASABIEngine/cogaEmotionalAttendee.h \
		../WASABIEngine/EmotionDynamics.h \
		../WASABIEngine/EmotionContainer.h \
		../WASABIEngine/AffectiveState.h \
		../WASABIEngine/WASABIEngine_global.h \
		../WASABIEngine/EmotionConverter.h \
		../WASABIEngine/cogaAttendee.h \
		ui_wasabiqtwindow.h \
		padwindow.h \
		../WASABIEngine/PrimaryEmotion.h \
		../WASABIEngine/SecondaryEmotion.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o wasabiqtwindow.o wasabiqtwindow.cpp

padwindow.o: padwindow.cpp padwindow.h \
		glPADWidget.h \
		../WASABIEngine/WASABIEngine.h \
		../WASABIEngine/cogaEmotionalAttendee.h \
		../WASABIEngine/EmotionDynamics.h \
		../WASABIEngine/EmotionContainer.h \
		../WASABIEngine/AffectiveState.h \
		../WASABIEngine/WASABIEngine_global.h \
		../WASABIEngine/EmotionConverter.h \
		../WASABIEngine/cogaAttendee.h \
		wasabiqtwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o padwindow.o padwindow.cpp

glPADWidget.o: glPADWidget.cpp glPADWidget.h \
		../WASABIEngine/WASABIEngine.h \
		../WASABIEngine/cogaEmotionalAttendee.h \
		../WASABIEngine/EmotionDynamics.h \
		../WASABIEngine/EmotionContainer.h \
		../WASABIEngine/AffectiveState.h \
		../WASABIEngine/WASABIEngine_global.h \
		../WASABIEngine/EmotionConverter.h \
		../WASABIEngine/cogaAttendee.h \
		wasabiqtwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o glPADWidget.o glPADWidget.cpp

moc_padwindow.o: moc_padwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_padwindow.o moc_padwindow.cpp

moc_glPADWidget.o: moc_glPADWidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_glPADWidget.o moc_glPADWidget.cpp

moc_wasabiqtwindow.o: moc_wasabiqtwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_wasabiqtwindow.o moc_wasabiqtwindow.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

